{"data":{"site":{"siteMetadata":{"title":"Utsav's Blog","author":"Utsav Shrestha"}},"markdownRemark":{"id":"a5a052a6-27d3-5a9f-a0bb-ed2207a6b073","excerpt":"UITapGestures we’ve all used it. I’ve probably used it a hundred times and yet fail to remeber the syntax. Coming from an Android…","html":"<p>UITapGestures we’ve all used it. I’ve probably used it a hundred times and yet fail to remeber the syntax. Coming from an Android development background first thing I realized was this is way too much boiler plate code just to implement a tap gesture. For those of you who aren’t familiar with android java syntax</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">view<span class=\"token punctuation\">.</span><span class=\"token function\">OnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>View v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">DoIt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>**Thats all. Like UIView in swift “view” can be anything from a plain view to a button or even textfields. There was no way I could put up with so much boilerplate code just to implement a tapgesture. After giving it some tries I managed to hackaway an extension for tapgesture.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token builtin\">UIView</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token comment\">// In order to create computed properties for extensions, we need a key to</span>\n    <span class=\"token comment\">// store and access the stored property</span>\n    fileprivate <span class=\"token keyword\">struct</span> <span class=\"token builtin\">AssociatedObjectKeys</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">static</span> <span class=\"token keyword\">var</span> tapGestureRecognizer <span class=\"token operator\">=</span> <span class=\"token string\">\"MediaViewerAssociatedObjectKey_mediaViewer\"</span>\n    <span class=\"token punctuation\">}</span>\n    \n    fileprivate <span class=\"token keyword\">typealias</span> <span class=\"token builtin\">Action</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token comment\">// Set our computed property type to a closure</span>\n    fileprivate <span class=\"token keyword\">var</span> tapGestureRecognizerAction<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Action</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">set</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> newValue <span class=\"token operator\">=</span> newValue <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// Computed properties get stored as associated objects</span>\n                <span class=\"token function\">objc_setAssociatedObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token builtin\">AssociatedObjectKeys</span><span class=\"token punctuation\">.</span>tapGestureRecognizer<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">,</span> objc_AssociationPolicy<span class=\"token punctuation\">.</span><span class=\"token constant\">OBJC_ASSOCIATION_RETAIN</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> tapGestureRecognizerActionInstance <span class=\"token operator\">=</span> <span class=\"token function\">objc_getAssociatedObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token builtin\">AssociatedObjectKeys</span><span class=\"token punctuation\">.</span>tapGestureRecognizer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token builtin\">Action</span>\n            <span class=\"token keyword\">return</span> tapGestureRecognizerActionInstance\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// This is the meat of the sauce, here we create the tap gesture recognizer and</span>\n    <span class=\"token comment\">// store the closure the user passed to us in the associated object we declared above</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">addTapGestureRecognizer</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>isUserInteractionEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>tapGestureRecognizerAction <span class=\"token operator\">=</span> action\n        <span class=\"token keyword\">let</span> tapGestureRecognizer <span class=\"token operator\">=</span> <span class=\"token function\">UITapGestureRecognizer</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">:</span> #<span class=\"token function\">selector</span><span class=\"token punctuation\">(</span>handleTapGesture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">addGestureRecognizer</span><span class=\"token punctuation\">(</span>tapGestureRecognizer<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// Every time the user taps on the UIImageView, this function gets called,</span>\n    <span class=\"token comment\">// which triggers the closure we stored</span>\n    <span class=\"token atrule\">@objc</span> fileprivate <span class=\"token keyword\">func</span> <span class=\"token function\">handleTapGesture</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITapGestureRecognizer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> action <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>tapGestureRecognizerAction <span class=\"token punctuation\">{</span>\n            action<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no action\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Using this extension will shorten the code for tap gesture\n**from this</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> tapGestureRecognizer <span class=\"token operator\">=</span> <span class=\"token function\">UITapGestureRecognizer</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">:</span> #<span class=\"token function\">selector</span><span class=\"token punctuation\">(</span><span class=\"token function\">viewTapped</span><span class=\"token punctuation\">(</span>tapGestureRecognizer<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nview<span class=\"token punctuation\">.</span>isUserInteractionEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\nview<span class=\"token punctuation\">.</span><span class=\"token function\">addGestureRecognizer</span><span class=\"token punctuation\">(</span>tapGestureRecognizer<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">viewTapped</span><span class=\"token punctuation\">(</span>tapGestureRecognizer<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITapGestureRecognizer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//do stuff</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>**to this</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span>addTapGestureRecognizer<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//do stuff</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Awesome isn’t it? :D</h2>\n<p>This extension has saved me countless hours of implementing all that boiler plate. Hopefully it’ll do the same for you too :)\nI’m very new to iOS development so please do let me know if there’s that can be done to improve this extension.</p>\n<p><a href=\"https://github.com/utsavstha/EasyTapGesture\">Github</a></p>","fields":{"readingTime":{"text":"2 min read"}},"frontmatter":{"title":"An extension for UI Tap gesture iOS","date":"January 05, 2019"}}},"pageContext":{"slug":"/tap-gesture-swift/","previous":null,"next":{"fields":{"slug":"/swap-variable/"},"frontmatter":{"title":"Swap two numbers without using a temporary variable"}}}}